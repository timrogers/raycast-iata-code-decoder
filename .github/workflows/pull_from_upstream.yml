name: Pull from upstream

on:
  push
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the current repo
        uses: actions/checkout@v3
        with:
          path: my-extension
      - name: Check out the `raycast/extensions` repo
        uses: actions/checkout@v3
        with:
          repository: raycast/extensions
          # The GitHub Actions-provided token only has access to the repo where the
          # action is running, and not other repos the user has access to. We use
          # our personal access token which has wider access.
          path: raycast-extensions
      - name: Get SHA of most recent upstream extension changes
        id: get_most_recent_changes_sha
        run: |
          echo "::set-output name=SHA::$(git --no-pager log -1 --format="%H" extensions/iata-code-decoder )"
        shell: bash
        working-directory: raycast-extensions
      - name: Create branch for any upstream changes
        run: git checkout -b upstream-${{ steps.get_most_recent_changes_sha.outputs.SHA }}
        shell: bash
        working-directory: my-extension
      - name: Copy upstream changes
        run: cp -R extensions/iata-code-decoder/* ../my-extension
        shell: bash
        working-directory: raycast-extensions
      - name: Check for changes
        id: check_changes
        run: |
          echo ::set-output name=changed::$(if [[ -z "$(git status --porcelain)" ]];
          then
            echo "0"
          else
            echo "1"
          fi)
        working-directory: my-extension
      - name: Stage changes, ready to commit
        run: git add --all .
        shell: bash
        working-directory: my-extension
        if: steps.check_changes.outputs.changed == 1
      - name: Configure Git user information so we can commit
        run: git config user.name 'github-actions[bot]' && git config user.email 'github-actions[bot]@users.noreply.github.com'
        shell: bash
        working-directory: my-extension
        if: steps.check_changes.outputs.changed == 1
      - name: Commit upstream changes to branch
        run: git commit -m 'Sync upstream changes from ${{ steps.get_most_recent_changes_sha.outputs.SHA }} and earlier'
        shell: bash
        working-directory: my-extension
        if: steps.check_changes.outputs.changed == 1
      - name: Push upstream changes to our repo
        run: git push -f origin upstream-${{ steps.get_most_recent_changes_sha.outputs.SHA }}
        shell: bash
        working-directory: my-extension
        if: steps.check_changes.outputs.changed == 1
      - name: Create pull request (if it doesn't already exist)
        id: create_pull_request
        # If there is already a PR for this branch, then we'll skip creating a new PR and return the URL of the existing one
        run: echo "::set-output name={url}::$(gh pr create --head upstream-${{ steps.get_most_recent_changes_sha.outputs.SHA }} --assignee timrogers --repo timrogers/raycast-iata-code-decoder --title "Sync upstream changes from ${{ steps.get_most_recent_changes_sha.outputs.SHA }} and earlier" --body "This PR should be merged without modifications so that this repo reflects what is upstream in the raycast/extensions repo.")"
        shell: bash
        working-directory: my-extension
        env:
          GH_DEBUG: api
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: steps.check_changes.outputs.changed == 1
